/*
 ============================================================================
 Name        : MPIPingPong.c
 Author      : 
 Version     :
 Copyright   : Your copyright notice
 Description : Hello World in C, Ansi-style
 ============================================================================
 */

#include <stdio.h>
#include <stdlib.h>
#include <mpi.h>
#include <string.h>


// TODO add docs
int main(void) {
	MPI_Init(NULL, NULL);
	int rank;
	MPI_Comm_rank(MPI_COMM_WORLD, &rank);
	int size;
	MPI_Comm_size(MPI_COMM_WORLD, &size);

	char message[4];
	char ping[] = "ping";
//	char pong[] = "pong";
	int number;
	if (rank == 0) {
		strcpy(message, ping);
		printf("message is: %s", message);
////		number = 100;
//		// send message to process 1 with tag 0
//		MPI_Send(&message, 1, MPI_CHAR, 1, 0, MPI_COMM_WORLD);
//		// receive message from process 1 with tag 1
//		MPI_Recv(&message, 1, MPI_CHAR, 1, 1, MPI_COMM_WORLD, MPI_STATUS_IGNORE);
//		printf("Process 0 received a %s from process 1\n", message);
//	} else if (rank == 1) {
////		number = 200;
//		strcpy(message, pong);
//		// send message to process 0 with tag 1
//		MPI_Send(&message, 1, MPI_CHAR, 0, 1, MPI_COMM_WORLD);
//		// receive message from process 0 with tag 0
//		MPI_Recv(&message, 1, MPI_CHAR, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);
//		printf("Process 1 received a %s from process 0\n", message);
	}

	MPI_Finalize();
	return EXIT_SUCCESS;
}
