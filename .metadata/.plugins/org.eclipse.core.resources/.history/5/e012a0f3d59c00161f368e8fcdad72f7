#include <mpi.h> #include <stdio.h> #include <stdlib.h> #include <string.h> #define MAXVAL 4
int main(void){ int master = 0; int id; int numprocs; int i; MPI_Status status; int array1[MAXVAL]; int array2[MAXVAL+1];
/* Initialize MPI. */ MPI_Init(NULL, NULL); /* Get the number of processes */ MPI_Comm_size(MPI_COMM_WORLD, &numprocs);
/* Get my rank among all the processes */ MPI_Comm_rank(MPI_COMM_WORLD, &id);
if(id==0) {     for (i=0;i<MAXVAL;i++){       array1[i] = i+1;     }   }
// Send array to all processes
MPI_Bcast ( array1, MAXVAL, MPI_INT, master, MPI_COMM_WORLD );
printf("Process ID:   %d\n", id); for(int cnt=0;cnt<MAXVAL;cnt++){
printf("%d  ",array1[cnt]);
} printf("\n");
    MPI_Gather(&id, 1, MPI_INT, &array2[id], 1, MPI_INT, 0, MPI_COMM_WORLD);
if (id==master){ printf ("\n");
printf ("The start array is\n"); for(int cnt=0;cnt<MAXVAL;cnt++){ printf("%d  ",array1[cnt]); } printf("\n\n"); printf ("The final array is\n"); for(int cnt=0;cnt<MAXVAL;cnt++){ printf("%d  ",array2[cnt]); } printf("\n");
}
// For all the processes that are not 0 or the master // send their sum to the master and the master receives the sum // and adds it to the array2 for (i=1;i<numprocs;i++){

